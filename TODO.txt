TODO:

- Filtering by difference
	- Queries on sub-objects: https://groups.google.com/forum/#!topic/django-non-relational/kCLOcI7nHS0
		- Station.objects.raw_query({'mins.Jan':{'$lte':-10}})
		- Station.objects.raw_query({'location' : {'$within': { '$center' : [[0,0], 7]}}})[0].location.longitude
	- Possibly switch representation of location to this:
	http://django-mongodb-engine.readthedocs.org/en/latest/topics/lowerlevel.html#raw-queries-and-updates
	- http://docs.mongoengine.org/guide/defining-documents.html
â€” More sophisticated refreshing: only query for new areas of screen
- Augment Data, especially in central US (NWS?)
- Show graphs
- Create color layer interpolated between stations
	- Possibly more ambitious: model elevation differences via lapse rate:
		- Interpolation of elevation, temperature between stations: 
		http://wiki.scipy.org/Cookbook/Matplotlib/Gridding_irregularly_spaced_data
		- Sample elevation data and calculate temperature again, based on interpolated temperature and difference between interpolated and actual elevation
			- http://ned.usgs.gov/
			- API: http://ned.usgs.gov/epqs/
			- http://en.wikipedia.org/wiki/U.S._Standard_Atmosphere
		- Interpolate temperature again